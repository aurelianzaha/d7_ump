 <?php
/**
 * @file
 * User Management Pro
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function ump_help($path, $arg) {
  switch ($path) {
    case "admin/help#ump":
      return t("User Management Pro Help"); 
      break; 
  }  
}

/**
 * Implements hook_menu().
 */
function ump_menu() {  
  $items = array();

  $items['admin/config/ump'] = array(
      'title' => 'UMP Configuration',
      'description' => 'Configuration for User Management Pro module',
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('access administration pages'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
  );  
  
  $items['admin/config/ump/overview'] = array(
    'title' => 'UMP Rules Overview',
    'description' => 'UMP Rules Overview',
    'page callback' => 'ump_rules_overview',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ump.admin.inc',
  );
  
  $items['admin/config/ump/rule/create'] = array(
    'title' => 'UMP Create Rule',
    'description' => 'UMP Create Rule',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ump_rule_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ump.admin_forms.inc',
  );  

  $items['admin/config/ump/rule/edit/%'] = array(
    'title' => 'UMP Edit Rule Configuration',
    'description' => 'Configuration for User Management Pro module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ump_rule_form', 5),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ump.admin_forms.inc',
  );    
  
  $items['admin/config/ump/rule/delete/%'] = array(
    'title' => 'UMP Delete Rule Configuration',
    'description' => 'Configuration for User Management Pro module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ump_rule_delete_form', 5),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ump.admin_forms.inc',
  );
  
  $items['user/%user/ump'] = array(
    'title' => t('User Management Pro'),
    'page callback' => 'ump_user_page',
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'ump.pages.inc',
    'weight' => 10,
  );	  
  
  $items['ump/people/create'] = array(
    'title' => 'Add user',
    'page callback' => 'drupal_goto',
    'page arguments' => array('admin/people/create'),
    'access callback' => 'ump_check_permission',
    'access arguments' => array (2),
    'type' => MENU_LOCAL_ACTION,
  );  
  
  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function ump_menu_alter(&$items) {
  /*$items['admin/people/create']['access callback'] = 'ump_check_permission';
  $items['admin/people/create']['access arguments'] = array (2);*/
  /*$items['user/%user']['access callback'] = 'subuser_access_view_callback';
  $items['user/%user/cancel']['access callback'] = 'subuser_access_delete_callback';
  $items['user/%user/cancel/confirm/%/%']['access callback'] = 'subuser_access_delete_callback';
  $items['user/%user/edit']['access callback'] = 'subuser_access_edit_callback';*/
  
  chain_menu_access_chain($items, 'admin/people/create', 'ump_check_permission', array('create'), TRUE);
}

function ump_form_alter(&$form, &$form_state, $form_id) {
  //dsm ($form_id);
}

function ump_check_permission ($action) {
  global $user;
  if (in_array("administrator", $user->roles)) {
    return true;
  }
  
  if ($action == "create") {
    $guids = variable_get("user_management_pro_rules");
    if (is_array($guids)) {
      foreach ($guids as $guid) {
        $rule = variable_get("user_management_pro_".$guid);
        if (isset($user->roles[$rule["select_role"]])) {
          if ($rule["allow_to_create_enable"] == 1) {
            ump_temp_administer_users (true);
            return true;
          }  
        }
      }       
    }
    ump_temp_administer_users (false);
    return false;
  }
}

/**
 * Temporarily override 'administer users' for the duration or processing this page.
 */
function ump_temp_administer_users($allow) {
  global $user;
  $static = &drupal_static('user_access');
  $static[$user->uid]['administer users'] = $allow;
}